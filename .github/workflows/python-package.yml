# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v2
      id: cache-venv  # name for referring later
      with:
        path: ./.venv/  # what we cache: the virtualenv
        # The cache key depends on requirements.txt
        key: ${{ runner.os }}-venv-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-venv-
    - name: Install gfortran
      run: |
        sudo apt-get install gfortran
    - name: Install dependencies
    # Build a virtualenv, but only if it doesn't already exist
      run: python -m venv ./.venv && . ./.venv/bin/activate && 
           pip install -r requirements.txt &&
           pip install flake8 pytest pytest-describe pytest-mock pretend wheel setuptools &&
           pip install -e .
      if: steps.cache-venv.outputs.cache-hit != 'true'
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        . ./.venv/bin/activate && flake8 maszcal/ --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        . ./.venv/bin/activate && flake8 maszcal/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    # Note that you have to activate the virtualenv in every step
    # because GitHub actions doesn't preserve the environment
    - name: Test with pytest
      run: . ./.venv/bin/activate && pytest spec/**/*.py
